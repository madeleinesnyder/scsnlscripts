'''
Config file for fmri individualstats

1. To run this you must use a custom python environment. Run the following commands:
	$ export PATH=/home/groups/menon/lab_shared/software/miniconda2/bin:$PATH
	$ source activate

2. You can now run this script in bash. It will submit a parallel job for
   each of your subjects.
	$ python preprocessing_config.py

'''

######################
## Script Variables ##
######################

# Please specify the data type of preprocessed images
# 'nii' for Nifti 4-D format, 'img' for Analyze 7.5 format
image_type = 'nii'

# Please specify the standard preprocessing pipeline you have used
pipeline_type = 'swar'

# Path to the directory with your raw data
raw_dir = '/oak/stanford/groups/menon/rawdata/scsnl/'

# Your top level project directory
project_dir = '/oak/stanford/groups/menon/projects/kduberg/SST_2017/'

# Please specify the .txt file or a cell array of subjects (full path)
subjectlist = '/oak/stanford/groups/menon/projects/kduberg/SST_2017/data/subjectlist/test.csv'

# Please specify the .txt file with your sessions (full path)
runlist = '/oak/stanford/groups/menon/projects/kduberg/SST_2017/data/subjectlist/curr_run_list.txt'

# Please specify the task design file (*.m)
taskdesign_file = 'task_design.m'

# Please specify the file holding contrasts
contrast_file = 'contrasts.mat'

# Please specify the folder for preprocessed data via standard pipeline
preprocessed_dir = pipeline_type 

# Please specify the folder holding statistics results (below 'stats_spm8'
# which is generated by default)
# If you include_volrepair = 1 below, set stats_dir = 'temp_stats';
stats_dir = 'stats_spm8'

# Please indicate whether to use head movements (1:Yes; 0:No)
movement_include = 1

# Type of fmri you are running this on (either taskfmri or restfmri)
fmri_type = 'taskfmri'

# Please indicate whether it is based on VolRepair pipeline
# 1: use volrepair pipeline data for individual stats
# 0: use standard pipeline data
# If you set volrepair_include = 1, set up VolRepair section below
# If you set volrepair_include = 0, do not set up VolRepair section below
volrepair_include = 0

# -------------------------------------------------------------------------
# VolRepair Preprocessing Setup
# -------------------------------------------------------------------------

# Please specify the volrepair preprocessing pipeline
volpipeline_type = 'swar'

# Please specify the volrepair preprocessed directory
volrepaired_dir = 'volrepair_spm8'

# Please specify the directory for VolRepaired data (swavrI*)
# the stats folder is under 'stats_spm8' folder (generated by default)
repairedstats_dir   = 'stats_spm8_VolRepair'

# -------------------------------------------------------------------------

# Please specify the directory holding batch templates
template_dir   = '/oak/stanford/groups/menon/scsnlscripts/spm/BatchTemplates'

######################
### Slurm Variables ##
######################

# The name for your job
job_name = 'individual_stats'

# Where to save output files from each job
job_output = project_dir+'/Jobs/IndividualStats-%j.out'

# Where to save error files from each job
job_error = project_dir+'/Jobs/IndividualStats-%j.err'

# The amount of time to allot for each job
job_time = '06:00:00'

# Job priority
job_qos = 'normal'

# Number of nodes to request
job_nnodes = 1

# Amount of memory to allocate per CPU
job_mem = 4000

# Partition to run your job on
# Options are:
#   - owners: access to all nodes
#   - menon: access to our lab nodes
#   - normal: the normal queue
job_partition = 'owners'

'''
Do not touch under this line
'''
import sys
sys.path.append('/oak/stanford/groups/menon/scsnlscripts/spm/Utility')
from config import run_script


config_args = {'image_type':image_type,
		'pipeline_type':pipeline_type,
		'raw_dir':raw_dir,
		'project_dir':project_dir,
		'data_dir':raw_dir,
		'subjectlist':subjectlist,
		'runlist':runlist,
		'taskdesign_file':taskdesign_file,
		'contrast_file':contrast_file,
		'preprocessed_dir':preprocessed_dir,
		'stats_dir':stats_dir,
		'movement_include':movement_include,
		'volrepair_include':volrepair_include,
		'volpipeline_type':volpipeline_type,
		'volrepaired_dir':volrepaired_dir,
		'repairedstats_dir':repairedstats_dir,
		'template_dir':template_dir,
		'fmri_type':fmri_type}

slurm_args = {'job_name':job_name,
	      'job_output':job_output,
	      'job_error':job_error,
	      'job_time':job_time,
	      'job_qos':job_qos,
	      'job_nnodes':job_nnodes,
	      'job_mem':job_mem,
	      'job_partition':job_partition}

run_script(config_args,slurm_args,'individualstats')

